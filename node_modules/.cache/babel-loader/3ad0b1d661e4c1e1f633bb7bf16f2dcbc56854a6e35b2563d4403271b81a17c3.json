{"ast":null,"code":"import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\nvar _now;\nfunction clearTime() {\n  _now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nvar time = {\n  now: function now() {\n    if (_now === undefined) {\n      time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());\n    }\n    return _now;\n  },\n  set: function set(newTime) {\n    _now = newTime;\n    queueMicrotask(clearTime);\n  }\n};\nexport { time };","map":{"version":3,"names":["MotionGlobalConfig","frameData","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask"],"sources":["/Users/JarredCianciulli/Desktop/Applications/Projects/ChooseYouCoaching/frontend/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs"],"sourcesContent":["import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,SAAS,QAAQ,aAAa;AAEvC,IAAIC,IAAG;AACP,SAASC,SAASA,CAAA,EAAG;EACjBD,IAAG,GAAGE,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG;EACTH,GAAG,EAAE,SAAAA,IAAA,EAAM;IACP,IAAIA,IAAG,KAAKE,SAAS,EAAE;MACnBC,IAAI,CAACC,GAAG,CAACL,SAAS,CAACM,YAAY,IAAIP,kBAAkB,CAACQ,eAAe,GAC/DP,SAAS,CAACQ,SAAS,GACnBC,WAAW,CAACR,GAAG,CAAC,CAAC,CAAC;IAC5B;IACA,OAAOA,IAAG;EACd,CAAC;EACDI,GAAG,EAAE,SAAAA,IAACK,OAAO,EAAK;IACdT,IAAG,GAAGS,OAAO;IACbC,cAAc,CAACT,SAAS,CAAC;EAC7B;AACJ,CAAC;AAED,SAASE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}