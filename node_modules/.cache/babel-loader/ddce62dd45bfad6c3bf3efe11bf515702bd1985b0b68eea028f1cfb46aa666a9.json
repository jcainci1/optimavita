{"ast":null,"code":"var _jsxFileName = \"/Users/JarredCianciulli/Desktop/Applications/Projects/OptimaVita/frontend/src/components/calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport AvailabilityDay from \"./AvailabilityDay\";\nimport AvailabilityMonth from \"./AvailabilityMonth\";\nimport React, { useState, useRef } from \"react\";\nimport ReactCalendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport classes from \"./Calendar.module.css\";\nimport \"./Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  isOpen,\n  handleClose,\n  section_id,\n  service_id,\n  availability_organization\n}) => {\n  _s();\n  let CalendarPopup;\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [visibleDates, setVisibleDates] = useState([]);\n  const calendarRef = useRef(null);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    // Add class to weekends\n    if (view === \"month\") {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    }\n\n    // Add class to holidays (example: New Year's Day)\n    if (moment(date).isSame(\"2024-01-01\", \"day\")) {\n      return \"holiday\";\n    }\n    return null;\n  };\n  const generateDatesInRange = (startDate, endDate) => {\n    const dates = [];\n    let currentDate = startDate;\n    while (currentDate <= endDate) {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return dates;\n  };\n  const handleActiveStartDateChange = ({\n    activeStartDate,\n    view\n  }) => {\n    if (view === \"month\") {\n      const start = new Date(activeStartDate);\n      const end = new Date(start);\n      end.setMonth(end.getMonth() + 1);\n      end.setDate(0);\n      const datesInRange = generateDatesInRange(start, end);\n      setVisibleDates(datesInRange);\n    }\n  };\n  const handleBackToToday = () => {\n    const today = new Date();\n    setSelectedDate(today);\n    calendarRef.current.setActiveStartDate(today);\n    // onDateChange(moment(today).format(\"YYYY-MM-DD\"));\n  };\n\n  const transition_text = {\n    duration: 0.3,\n    ease: \"easeInOut\"\n  };\n  if (!isOpen) return null;\n  if (isOpen) {\n    {\n      CalendarPopup = /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        transition: transition_text,\n        exit: {\n          opacity: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: classes.popupOverlay,\n          initial: {\n            opacity: 0\n          },\n          transition: transition_text,\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            className: classes.popupContent,\n            children: [/*#__PURE__*/_jsxDEV(motion.button, {\n              className: classes.popupClose,\n              onClick: handleClose,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n              onChange: handleDateChange,\n              value: selectedDate,\n              ref: calendarRef,\n              tileClassName: tileClassName,\n              onActiveStartDateChange: handleActiveStartDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.calendarActionsContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleBackToToday,\n                className: classes.backToTodayBtn,\n                children: \"Back to Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.selectedDate,\n                children: [\"Selected Date:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.selectedDateSpec,\n                  children: moment(selectedDate).format(\"MM-DD-YYYY\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvailabilityDay, {\n                selectedDate: selectedDate,\n                service_id: service_id,\n                section_id: section_id,\n                availability_organization: availability_organization\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvailabilityMonth, {\n                visibleDates: visibleDates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", CalendarPopup, \" \"]\n  }, void 0, true);\n};\n_s(Calendar, \"OR1Jm92SW63gRUb57qvlM/9EAMw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["motion","AnimatePresence","AvailabilityDay","AvailabilityMonth","React","useState","useRef","ReactCalendar","moment","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","isOpen","handleClose","section_id","service_id","availability_organization","_s","CalendarPopup","selectedDate","setSelectedDate","Date","visibleDates","setVisibleDates","calendarRef","handleDateChange","date","tileClassName","view","getDay","isSame","generateDatesInRange","startDate","endDate","dates","currentDate","push","setDate","getDate","handleActiveStartDateChange","activeStartDate","start","end","setMonth","getMonth","datesInRange","handleBackToToday","today","current","setActiveStartDate","transition_text","duration","ease","transition","exit","opacity","children","div","className","popupOverlay","initial","animate","popupContent","button","popupClose","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","ref","onActiveStartDateChange","calendarActionsContainer","backToTodayBtn","selectedDateSpec","format","_c","$RefreshReg$"],"sources":["/Users/JarredCianciulli/Desktop/Applications/Projects/OptimaVita/frontend/src/components/calendar/Calendar.js"],"sourcesContent":["import { motion, AnimatePresence } from \"framer-motion\";\nimport AvailabilityDay from \"./AvailabilityDay\";\nimport AvailabilityMonth from \"./AvailabilityMonth\";\nimport React, { useState, useRef } from \"react\";\nimport ReactCalendar from \"react-calendar\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport classes from \"./Calendar.module.css\";\nimport \"./Calendar.css\";\n\nconst Calendar = ({\n  isOpen,\n  handleClose,\n  section_id,\n  service_id,\n  availability_organization,\n}) => {\n  let CalendarPopup;\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [visibleDates, setVisibleDates] = useState([]);\n  const calendarRef = useRef(null);\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const tileClassName = ({ date, view }) => {\n    // Add class to weekends\n    if (view === \"month\") {\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return \"weekend\";\n      }\n    }\n\n    // Add class to holidays (example: New Year's Day)\n    if (moment(date).isSame(\"2024-01-01\", \"day\")) {\n      return \"holiday\";\n    }\n\n    return null;\n  };\n\n  const generateDatesInRange = (startDate, endDate) => {\n    const dates = [];\n    let currentDate = startDate;\n\n    while (currentDate <= endDate) {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return dates;\n  };\n\n  const handleActiveStartDateChange = ({ activeStartDate, view }) => {\n    if (view === \"month\") {\n      const start = new Date(activeStartDate);\n      const end = new Date(start);\n      end.setMonth(end.getMonth() + 1);\n      end.setDate(0);\n\n      const datesInRange = generateDatesInRange(start, end);\n      setVisibleDates(datesInRange);\n    }\n  };\n  const handleBackToToday = () => {\n    const today = new Date();\n    setSelectedDate(today);\n    calendarRef.current.setActiveStartDate(today);\n    // onDateChange(moment(today).format(\"YYYY-MM-DD\"));\n  };\n\n  const transition_text = {\n    duration: 0.3,\n    ease: \"easeInOut\",\n  };\n  if (!isOpen) return null;\n  if (isOpen) {\n    {\n      CalendarPopup = (\n        <AnimatePresence transition={transition_text} exit={{ opacity: 0 }}>\n          <motion.div\n            className={classes.popupOverlay}\n            initial={{ opacity: 0 }}\n            transition={transition_text}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div className={classes.popupContent}>\n              <motion.button\n                className={classes.popupClose}\n                onClick={handleClose}\n              >\n                &times;\n              </motion.button>\n              <ReactCalendar\n                onChange={handleDateChange}\n                value={selectedDate}\n                ref={calendarRef}\n                tileClassName={tileClassName}\n                onActiveStartDateChange={handleActiveStartDateChange}\n              />\n\n              <div className={classes.calendarActionsContainer}>\n                <button\n                  onClick={handleBackToToday}\n                  className={classes.backToTodayBtn}\n                >\n                  Back to Today\n                </button>\n                <div className={classes.selectedDate}>\n                  Selected Date:\n                  <div className={classes.selectedDateSpec}>\n                    {moment(selectedDate).format(\"MM-DD-YYYY\")}\n                  </div>\n                </div>\n                <AvailabilityDay\n                  selectedDate={selectedDate}\n                  service_id={service_id}\n                  section_id={section_id}\n                  availability_organization={availability_organization}\n                />\n                <AvailabilityMonth visibleDates={visibleDates} />\n              </div>\n            </motion.div>\n          </motion.div>\n        </AnimatePresence>\n      );\n    }\n  }\n\n  return <> {CalendarPopup} </>;\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}