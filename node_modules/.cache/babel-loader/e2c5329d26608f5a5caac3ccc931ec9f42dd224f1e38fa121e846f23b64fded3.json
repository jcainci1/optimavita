{"ast":null,"code":"var _jsxFileName = \"/Users/JarredCianciulli/Desktop/Applications/Projects/OptimaVita/frontend/src/pages/IntakeForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntakeFormPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Password validation logic\n  const validatePassword = password => {\n    const minLength = 8;\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\n    return password.length >= minLength && regex.test(password);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !password) {\n      setError(\"Please enter both email and password.\");\n      return;\n    }\n\n    // Validate password\n    if (!validatePassword(password)) {\n      setError(\"Password must be at least 8 characters long and contain both letters and numbers.\");\n      return;\n    }\n    setError(\"\");\n    setIsSubmitting(true);\n\n    // Simulate a successful login (You can replace this with an API call)\n    setTimeout(() => {\n      setIsSubmitting(false);\n      alert(\"Login successful!\");\n    }, 1500);\n  };\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!e.target.closest(\".login-container\")) {\n        setError(\"\"); // Clear error if click is outside the form\n      }\n    };\n\n    // Set a timeout to clear the error after 10 seconds\n    const errorTimeout = setTimeout(() => {\n      setError(\"\");\n    }, 10000); // 10 seconds\n\n    // Add event listener for clicks outside the form\n    document.addEventListener(\"click\", handleClickOutside);\n\n    // Cleanup: Remove event listener and clear timeout when the component is unmounted\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n      clearTimeout(errorTimeout);\n    };\n  }, []); // Empty dependency array to run this effect once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.loginContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(IntakeFormPage, \"1JGmSA3OmS8bUDGOCJN7OfzhNrg=\");\n_c = IntakeFormPage;\nexport default IntakeFormPage;\nvar _c;\n$RefreshReg$(_c, \"IntakeFormPage\");","map":{"version":3,"names":["React","useState","useEffect","classes","jsxDEV","_jsxDEV","IntakeFormPage","_s","email","setEmail","password","setPassword","error","setError","isSubmitting","setIsSubmitting","validatePassword","minLength","regex","length","test","handleSubmit","e","preventDefault","setTimeout","alert","handleClickOutside","target","closest","errorTimeout","document","addEventListener","removeEventListener","clearTimeout","className","loginContainer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/JarredCianciulli/Desktop/Applications/Projects/OptimaVita/frontend/src/pages/IntakeForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classes from \"./Login.module.css\";\n\nfunction IntakeFormPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Password validation logic\n  const validatePassword = (password) => {\n    const minLength = 8;\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\n    return password.length >= minLength && regex.test(password);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !password) {\n      setError(\"Please enter both email and password.\");\n      return;\n    }\n\n    // Validate password\n    if (!validatePassword(password)) {\n      setError(\n        \"Password must be at least 8 characters long and contain both letters and numbers.\"\n      );\n      return;\n    }\n\n    setError(\"\");\n    setIsSubmitting(true);\n\n    // Simulate a successful login (You can replace this with an API call)\n    setTimeout(() => {\n      setIsSubmitting(false);\n      alert(\"Login successful!\");\n    }, 1500);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!e.target.closest(\".login-container\")) {\n        setError(\"\"); // Clear error if click is outside the form\n      }\n    };\n\n    // Set a timeout to clear the error after 10 seconds\n    const errorTimeout = setTimeout(() => {\n      setError(\"\");\n    }, 10000); // 10 seconds\n\n    // Add event listener for clicks outside the form\n    document.addEventListener(\"click\", handleClickOutside);\n\n    // Cleanup: Remove event listener and clear timeout when the component is unmounted\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n      clearTimeout(errorTimeout);\n    };\n  }, []); // Empty dependency array to run this effect once when the component mounts\n\n  return <div className={classes.loginContainer}></div>;\n}\n\nexport default IntakeFormPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMe,gBAAgB,GAAIN,QAAQ,IAAK;IACrC,MAAMO,SAAS,GAAG,CAAC;IACnB,MAAMC,KAAK,GAAG,+CAA+C;IAC7D,OAAOR,QAAQ,CAACS,MAAM,IAAIF,SAAS,IAAIC,KAAK,CAACE,IAAI,CAACV,QAAQ,CAAC;EAC7D,CAAC;EAED,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACf,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBG,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACF;;IAEA;IACA,IAAI,CAACG,gBAAgB,CAACN,QAAQ,CAAC,EAAE;MAC/BG,QAAQ,CACN,mFACF,CAAC;MACD;IACF;IAEAA,QAAQ,CAAC,EAAE,CAAC;IACZE,eAAe,CAAC,IAAI,CAAC;;IAErB;IACAS,UAAU,CAAC,MAAM;MACfT,eAAe,CAAC,KAAK,CAAC;MACtBU,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,MAAMwB,kBAAkB,GAAIJ,CAAC,IAAK;MAChC,IAAI,CAACA,CAAC,CAACK,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,EAAE;QACzCf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB;IACF,CAAC;;IAED;IACA,MAAMgB,YAAY,GAAGL,UAAU,CAAC,MAAM;MACpCX,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX;IACAiB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEL,kBAAkB,CAAC;;IAEtD;IACA,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;MACzDO,YAAY,CAACJ,YAAY,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOxB,OAAA;IAAK6B,SAAS,EAAE/B,OAAO,CAACgC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvD;AAAChC,EAAA,CA/DQD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiEvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}